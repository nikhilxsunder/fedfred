[tox]
envlist = py310, py311, 312, 313, dev, types, dask, polars, check
isolated_build = True

[testenv]
description = Test package installation and runtime dependencies
deps =
    poetry
commands =
    poetry install --no-root --no-interaction
    python -c "import httpx, cachetools, asyncache, tenacity, pandas, geopandas; print('All runtime dependencies installed successfully!')"

[testenv:dev]
description = Test development dependencies
deps =
    poetry
commands =
    poetry install --no-root --with dev --no-interaction
    python -c "import pytest, pylint, mypy, bandit, pre_commit, hypothesis, sphinx; print('Development dependencies installed successfully!')"

[testenv:types]
description = Test optional type stubs
deps =
    poetry
commands =
    poetry install --no-root --extras "types" --no-interaction
    python -c "import pandas, geopandas; print('Type stubs installed successfully!')"

[testenv:dask]
description = Test optional dask dependencies
deps =
    poetry
commands =
    poetry install --no-root --extras "dask" --no-interaction
    python -c "import dask, dask_geopandas; print('Dask dependencies installed successfully!')"

[testenv:polars]
description = Test optional polars dependencies
deps =
    poetry
commands =
    poetry install --no-root --extras "polars" --no-interaction
    python -c "import polars; print('Polars dependencies installed successfully!')"

[testenv:check]
description = Check all dependencies (runtime + dev + optional)
deps =
    poetry
commands =
    poetry install --no-root --with dev --extras "types dask polars" --no-interaction
    python -c "import httpx, cachetools, asyncache, tenacity, pandas, geopandas, dask, dask_geopandas, polars; print('All dependencies (runtime, dev, and optional) installed successfully!')"
