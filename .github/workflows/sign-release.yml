name: Sign Release Assets

on:
  release:
    types: [published]

jobs:
  sign-assets:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Download release assets
        run: |
          mkdir -p assets
          # Get the release assets using GitHub CLI
          release_url="https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}"
          echo "Downloading from ${release_url}"

          # List and download assets from the GitHub release
          assets_json=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.event.release.tag_name }}")
          download_urls=$(echo "$assets_json" | jq -r '.assets[].browser_download_url')

          # Download each asset
          for url in $download_urls; do
            echo "Downloading $url"
            curl -L -o "assets/$(basename $url)" "$url"
          done
          ls -la assets/

      - name: Sign assets
        run: |
          mkdir -p signed
          for file in assets/*; do
            echo "Signing $file"
            gpg --detach-sign --armor "$file"
            mv "${file}.asc" signed/
          done
          ls -la signed/

      - name: Upload signatures to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: signed/*
          tag: ${{ github.event.release.tag_name }}
          file_glob: true
