name: Update Test Coverage

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  update-coverage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          poetry install

      - name: Run tests with coverage
        run: |
          # Run tests and capture coverage output
          poetry run pytest --cov=src/fedfred tests/ > coverage_output.txt

      - name: Generate coverage badge
        run: |
          # Extract coverage percentage
          COVERAGE=$(grep "TOTAL" coverage_output.txt | awk '{print $NF}' | sed 's/%//')
          echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV

      - name: Update TEST_COVERAGE.md
        run: |
          # Get the current date
          DATE=$(date +"%Y-%m-%d")

          # Create or update TEST_COVERAGE.md
          cat > TEST_COVERAGE.md << EOF
          # Test Coverage Report

          Last updated: $DATE

          ## Coverage Summary

          Overall coverage: ${COVERAGE}%

          ## Detailed Coverage

          \`\`\`
          $(cat coverage_output.txt)
          \`\`\`

          ## Running Test Coverage Locally

          To run the test suite with coverage:

          \`\`\`bash
          pytest --cov=src/fedfred tests/
          \`\`\`

          For a detailed HTML report:

          \`\`\`bash
          pytest --cov=src/fedfred tests/ --cov-report=html
          \`\`\`

          Then open \`htmlcov/index.html\` in your browser to view the report.

          ## Coverage Goals

          - Maintain at least 80% overall coverage
          - All public APIs should have 100% coverage
          - Focus on testing edge cases and error conditions
          EOF

      - name: Commit changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add TEST_COVERAGE.md
          git commit -m "Update test coverage report" || echo "No changes to commit"
          git push
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
